{
  "openapi": "3.1.1",
  "info": {
    "title": "Catalog of books API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "api/v1"
    }
  ],
  "tags": [
    {
      "name": "book",
      "description": "Book of a Publisher"
    },
    {
      "name": "books",
      "description": "Books of a Publisher"
    }
  ],
  "paths": {
    "/books/{bookId}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Find book by ID",
        "description": "Returns a single book",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "book"
        ],
        "summary": "Remove book by ID",
        "description": "Removes a single book",
        "operationId": "deleteBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A empty response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": null
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "book"
        ],
        "summary": "Update book by ID",
        "description": "Updates a single book",
        "operationId": "updateBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update a new book in the catalog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "book"
        ],
        "summary": "Partially update book by ID",
        "description": "Partially updates the book",
        "operationId": "updatePartialBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update a book in the catalog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Find all books",
        "description": "Returns all books",
        "operationId": "getBooks",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Books"
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "book"
        ],
        "summary": "Create a book",
        "description": "Returns a new book",
        "operationId": "storeBook",
        "requestBody": {
          "description": "Create a new book in the catalog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10,
            "readOnly": true
          },
          "isbn": {
            "type": "string",
            "example": 1234567890123
          },
          "name": {
            "type": "string",
            "example": "Book 1"
          },
          "author_names": {
            "type": "string",
            "example": [
              "Author 1",
              "Author 2"
            ]
          },
          "year_publication": {
            "type": "string",
            "example": 2007
          },
          "detail_link": {
            "type": "string",
            "example": "https://www.google.com/"
          }
        }
      },
      "Books": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Book"
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string",
                "example": "https://your-site.local/api/v1/books?page=1"
              },
              "last": {
                "type": "string",
                "example": "https://your-site.local/api/v1/books?page=1"
              },
              "prev": {
                "type": "string",
                "example": null
              },
              "next": {
                "type": "string",
                "example": null
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 1
              },
              "from": {
                "type": "integer",
                "example": 1
              },
              "last_page": {
                "type": "integer",
                "example": 1
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://your-site.local/api/v1/books?page=1"
                    },
                    "label": {
                      "type": "string",
                      "example": 1
                    },
                    "active": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              },
              "path": {
                "type": "string",
                "example": "https://your-site.local/api/v1/books"
              },
              "per_page": {
                "type": "integer",
                "example": 15
              },
              "to": {
                "type": "integer",
                "example": 1
              },
              "total": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "Errors": {
        "type": "object",
        "properties": {
          "errors": {
            "properties": {
              "response": {
                "type": "array",
                "example": {
                  "message": "Unauthorized",
                  "code": 401
                }
              },
              "validation": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "Book": {
        "description": "Book object that needs to be added to the catalog",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Authorization head with 'Bearer xxxxxxxxxxxxx' token"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}