{
  "openapi": "3.0.3",
  "info": {
    "title": "Catalog of books API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "api/v1"
    }
  ],
  "tags": [
    {
      "name": "book",
      "description": "Book of a Publisher"
    }
  ],
  "paths": {
    "/books/{bookId}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Find book by ID",
        "description": "Returns a single book",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "500": {
            "description": "fail operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "isbn": {
            "type": "string",
            "example": 1234567890123
          },
          "name": {
            "type": "string",
            "example": "Book 1"
          },
          "author_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorName"
            }
          },
          "year_publication": {
            "type": "string",
            "format": "Y",
            "example": "2007"
          },
          "detail_link": {
            "type": "string",
            "example": "https://www.google.com/"
          }
        }
      },
      "AuthorName": {
        "type": "string",
        "example": "Author 1"
      },
      "Errors": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "validation": {
            "$ref": "#/components/schemas/ErrorValidation"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthorized"
          },
          "code": {
            "type": "integer",
            "example": 401
          }
        }
      },
      "ErrorValidation": {
        "type": "object",
        "properties": {}
      }
    },
    "requestBodies": {
      "Book": {
        "description": "Book object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Book"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Authorization head with 'Bearer xxxxxxxxxxxxx' token"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
